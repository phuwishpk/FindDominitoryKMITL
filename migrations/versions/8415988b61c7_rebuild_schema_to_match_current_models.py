"""rebuild schema to match current models

Revision ID: 8415988b61c7
Revises: 158538de58c3
Create Date: 2025-10-13 19:52:20.276536

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8415988b61c7'
down_revision = '158538de58c3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('amenities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('label_th', sa.String(length=120), nullable=False),
    sa.Column('label_en', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('amenities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_amenities_code'), ['code'], unique=True)

    op.create_table('owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name_th', sa.String(length=120), nullable=False),
    sa.Column('full_name_en', sa.String(length=120), nullable=True),
    sa.Column('citizen_id', sa.String(length=13), nullable=False),
    sa.Column('occupancy_notice_pdf', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('approval_status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('citizen_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.Column('room_type', sa.String(length=50), nullable=True),
    sa.Column('rent_price', sa.Float(), nullable=True),
    sa.Column('address_line', sa.String(length=255), nullable=True),
    sa.Column('road', sa.String(length=120), nullable=True),
    sa.Column('soi', sa.String(length=120), nullable=True),
    sa.Column('subdistrict', sa.String(length=120), nullable=True),
    sa.Column('district', sa.String(length=120), nullable=True),
    sa.Column('province', sa.String(length=120), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('location_pin', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('workflow_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_properties_district'), ['district'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_is_approved'), ['is_approved'], unique=False)
        batch_op.create_index('ix_properties_loc', ['province', 'district', 'subdistrict'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_owner_id'), ['owner_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_price'), ['price'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_property_type'), ['property_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_province'), ['province'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_rent_price'), ['rent_price'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_room_type'), ['room_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_status'), ['status'], unique=False)
        batch_op.create_index('ix_properties_status_approved', ['status', 'is_approved'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_subdistrict'), ['subdistrict'], unique=False)
        batch_op.create_index('ix_properties_workflow', ['workflow_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_workflow_status'), ['workflow_status'], unique=False)

    op.create_table('approval_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor_type', sa.String(length=16), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=64), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('meta', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('property_amenities',
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('amenity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['amenity_id'], ['amenities.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('property_id', 'amenity_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('property_amenities')
    op.drop_table('audit_logs')
    op.drop_table('approval_requests')
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_properties_workflow_status'))
        batch_op.drop_index('ix_properties_workflow')
        batch_op.drop_index(batch_op.f('ix_properties_subdistrict'))
        batch_op.drop_index('ix_properties_status_approved')
        batch_op.drop_index(batch_op.f('ix_properties_status'))
        batch_op.drop_index(batch_op.f('ix_properties_room_type'))
        batch_op.drop_index(batch_op.f('ix_properties_rent_price'))
        batch_op.drop_index(batch_op.f('ix_properties_province'))
        batch_op.drop_index(batch_op.f('ix_properties_property_type'))
        batch_op.drop_index(batch_op.f('ix_properties_price'))
        batch_op.drop_index(batch_op.f('ix_properties_owner_id'))
        batch_op.drop_index('ix_properties_loc')
        batch_op.drop_index(batch_op.f('ix_properties_is_approved'))
        batch_op.drop_index(batch_op.f('ix_properties_is_active'))
        batch_op.drop_index(batch_op.f('ix_properties_district'))

    op.drop_table('properties')
    op.drop_table('owners')
    with op.batch_alter_table('amenities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_amenities_code'))

    op.drop_table('amenities')
    op.drop_table('admins')
    # ### end Alembic commands ###
